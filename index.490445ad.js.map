{"mappings":"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","sources":["src/index.js","src/js/mainRendering.js","src/js/pagination.js"],"sourcesContent":["import './js/workWithLocalStorage';\nimport './js/mainRendering';\nimport './js/pagination';\nimport './js/modalWindowRendering';\nimport './js/footerModalRendering';","// Сюди бажано не лізти\nimport { apiService } from './filmsAPIServise';\nimport { refs } from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader';\nimport { lastPage, buildingPagination } from './renderingPagination';\n\ndocument.addEventListener('DOMContentLoaded', receivingPopularFilms);\n\nexport default async function receivingPopularFilms() {\n  loader.show();\n  const responce = await apiService.getPopularMovies();\n  loader.hide();\n\n  apiService.requestType = 'trending';\n  try {\n    localStorage.setItem('currentPage', JSON.stringify(responce));\n  } catch (error) {\n    console.log(error.message);\n  }\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n\nwindow.addEventListener('resize', evt => {\n  try {\n    const filmsForCurrentPage = JSON.parse(localStorage.getItem('currentPage'));\n    apiService.page = filmsForCurrentPage.page;\n    buildingPagination(filmsForCurrentPage);\n  } catch (error) {\n    console.log(error.message);\n  }\n});\ndocument.addEventListener('submit', gettingMoviesByKeyword);\n\nasync function gettingMoviesByKeyword(e) {\n  e.preventDefault();\n\n  apiService.query = refs.homeHeaderForm.query.value;\n  apiService.requestType = 'search';\n  console.log(apiService.requestType);\n\n  loader.show();\n  const responce = await apiService.fetchMovieByQuery();\n  loader.hide();\n\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n","import { apiService } from './filmsAPIServise';\nimport { refs } from './refs' ;\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader';\nimport {lastPage, buildingPagination } from './renderingPagination';\n\n// const buttonBack = document.querySelector('.button-back');\n// const buttonForward = document.querySelector('.button-forward');\n// const buttonsPagesList = document.querySelector('.buttons-pages');\n\n// Слухач на клік по кнопці з номером сторінки\nrefs.buttonsPagesList.addEventListener('click', renderingFilmsByPageNumber);\n// Слухач на клік по кнопці назад\nrefs.buttonBack.addEventListener('click', goBackOnePage);\n// Слухач на клік по кнопці вперед\nrefs.buttonForward.addEventListener('click', goForwardOnePage);\n\nfunction renderingFilmsByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n    return\n    }\n\n    if (apiService.requestType === 'trending') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        loader.show();\n        apiService.getPopularMovies().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n            try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n        }).catch(error => error.message).finally(() => loader.hide());\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        return\n    }\n\n    if (apiService.requestType === 'search') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        loader.show();\n        apiService.fetchMovieByQuery().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n            try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n        }).catch(error => error.message).finally(() => loader.hide());\n        \n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" }); \n    }\n}\n\nfunction goBackOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            loader.show();\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n        return\n    }\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            loader.show();\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n}\n\nfunction goForwardOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            loader.show();\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            loader.show();\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n                 loader.hide();\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n}\n"],"names":["parcelRequire","$bpxeT","$8b78e60863070180$var$_receivingPopularFilms","$parcel$interopDefault","$2TvXO","mark","_callee","responce","$kvC6y","loader","show","$jUnVF","apiService","getPopularMovies","_ctx","sent","hide","requestType","localStorage","setItem","JSON","stringify","error","console","log","message","$1DdQm","buildingPagination","$4Nugj","refs","cardContainer","innerHTML","$1WxKN","default","results","apply","this","arguments","$8b78e60863070180$var$_gettingMoviesByKeyword","e","preventDefault","query","homeHeaderForm","value","fetchMovieByQuery","document","addEventListener","window","evt","filmsForCurrentPage","parse","getItem","page","buttonsPagesList","target","type","fetchPage","textContent","Number","then","data","catch","finally","scrollTo","top","left","behavior","fetchPage1","buttonBack","buttonForward","lastPage"],"version":3,"file":"index.490445ad.js.map"}