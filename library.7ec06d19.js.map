{"mappings":"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","sources":["src/js/libraryRendering.js","src/js/libraryPagination.js"],"sourcesContent":["import { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\ndocument.addEventListener('DOMContentLoaded', gettingMoviesFromWatched);\n\nrefs.buttonWatched.addEventListener('click', gettingMoviesFromWatched);\n\nfunction gettingMoviesFromWatched() {\n  const arr = libraryLogic.getFromStorage('watched');\n  refs.buttonWatched.classList.add('this-library');\n  refs.buttonQueue.classList.remove('this-library');\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n\nrefs.buttonQueue.addEventListener('click', gettingMoviesFromQueue);\n\nfunction gettingMoviesFromQueue() {\n  const arr = libraryLogic.getFromStorage('queue');\n  refs.buttonQueue.classList.add('this-library');\n  refs.buttonWatched.classList.remove('this-library');\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n","import renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { lastPage, buildingPagination } from './renderingPagination';\nimport { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\n\nfunction renderingPaginationForFirstPage() {\n        const filmsWatched = libraryLogic.getFromStorage('watched');\n        const filmsAmount = filmsWatched.length;\n        libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n        \n        if (filmsAmount === 0) {\n            return \n    }\n        buildingPagination(libraryLogic.pages)\n    \n        }\n\nrenderingPaginationForFirstPage();\n\nrefs.buttonsPagesList.addEventListener('click', renderingLibraryByPageNumber)\n\nfunction renderingLibraryByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n        return\n    }\n\n    const selectLibrary = document.querySelector('.this-library');\n    libraryLogic.currentPage = Number(evt.target.textContent);\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n\n    if (libraryLogic.currentPage === 1) {\n        const filmsForOnePage = [...films].splice(0, 20);\n        buildingPagination(libraryLogic.pages);\n        filmsForOnePage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    } else {\n        const filmsForOnePage = [...films].splice((libraryLogic.currentPage * 10 + (libraryLogic.currentPage - 2) * 10), 20);\n        buildingPagination(libraryLogic.pages);\n        filmsForOnePage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    }\n}\n\n// Слухач на кнопку назад\nrefs.buttonBack.addEventListener('click', goBackOnePageLibrary);\n// Слухач на клік по кнопці вперед\nrefs.buttonForward.addEventListener('click', goForwardOnePageLibrary);\n\nfunction goBackOnePageLibrary() {\n    if (libraryLogic.currentPage === 1) {\n        return\n    }\n\n    const selectLibrary = document.querySelector('.this-library');\n    libraryLogic.currentPage -= 1;\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n\n    const filmsForOnePage = films.slice(((libraryLogic.currentPage-1) * 20), (libraryLogic.currentPage * 20));\n    buildingPagination(libraryLogic.pages);\n    filmsForOnePage.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n        });\n    refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    \n}\n\nfunction goForwardOnePageLibrary() {\n    if (libraryLogic.currentPage === libraryLogic.totalPages) {\n        return\n    }\n\n    const selectLibrary = document.querySelector('.this-library');\n    libraryLogic.currentPage += 1;\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n\n   const filmsForOnePage = films.slice(((libraryLogic.currentPage-1) * 20), (libraryLogic.currentPage * 20));\n    buildingPagination(libraryLogic.pages);\n    filmsForOnePage.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n        });\n    refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n}\n"],"names":["$25dvs","parcelRequire","$5bbc6ace3e76458b$var$gettingMoviesFromWatched","arr","libraryLogic","getFromStorage","$krGWQ","refs","buttonWatched","classList","add","buttonQueue","remove","map","item1","keys","genres","item","Object","values","genre_ids","cardContainer","innerHTML","$cGFyt","default","slice","document","addEventListener","item2","filmsAmount","length","totalPages","Math","ceil","$aJ15F","buildingPagination","pages","$4079053403804050$var$renderingPaginationForFirstPage","buttonsPagesList","evt","target","type","selectLibrary","querySelector","currentPage","Number","textContent","films","trim","toLocaleLowerCase","filmsForOnePage","splice","window","scrollTo","top","left","behavior","buttonBack","item3","buttonForward","item4"],"version":3,"file":"library.7ec06d19.js.map"}