{"mappings":"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","sources":["src/js/filmsAPIServise.js","src/js/renderMarkupFilmsCard.js","src/js/workWithLocalStorage.js","src/js/pagination.js","src/js/mainRendering.js","src/js/loader.js","src/js/WorkingFiles/Aleks.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aa05d9ef1feff0e96ac321d8773a5c67';\n\nclass Apiservice {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.requestType = 'trending';\n  }\n\n  async fetchMovieByQuery() {\n    const response = await fetch(\n      `${BASE_URL}${this.requestType}/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}`\n    );\n    const results = await response.json();\n    return results;\n  }\n\n  async getPopularMovies() {\n    try {\n      const response = await fetch(\n        `${BASE_URL}${this.requestType}/movie/day?api_key=${API_KEY}&page=${this.page}`\n      );\n      const data = await response.json();\n      const popularMovies = data;\n      return popularMovies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieGenres() {\n    try {\n      const url = `${BASE_URL}genre/movie/list?api_key=${API_KEY}`;\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesDetails(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieTrailer(id) {\n    const url = `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pages() {\n    return this.page;\n  }\n  set pages(newPage) {\n    this.page = newPage;\n  }\n  get type() {\n    return this.requestType;\n  }\n\n  set type(newType) {\n    this.requestType = newType;\n  }\n}\n\nexport const apiService = new Apiservice();","//Катя Допрацьовуєш тут\n\nexport default function renderMarkupFilmsCard(films) {\n  const markupFilmsCard = films\n    .map(({ title, poster_path, release_date, genre_ids }) => {\n      // Перевірка кількості жанрів\n\n      const genresId = genre_ids.map(id => localStorage.getItem(id));\n      \n      if (genresId.length > 2) {\n        genresId.splice(2, genresId.length - 2, 'Other');\n      }\n\n      const genres = genresId.join(', ');\n      \n      // Обрізання повної дати до року\n      const yearRelease = release_date.slice(0, 4);\n\n      return `\n          <li class=\"films-list__item\">\n                <a href=\"\">\n                  <img class=\"films-list-item__poster\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" loading=\"lazy\"  />\n                  <div class=\"films-list-item__info\">\n                    <h2 class=\"films-list-item__tittle\">${title}</h2>\n                    <p class=\"films-list-item__ganres\">\n                      <span class=\"films-list-item__year\">${genres} | ${yearRelease}</span>\n                    </p>\n                  </div>\n                </a>`;\n    })\n    .join('');\n\n  return markupFilmsCard;\n}\n","import { apiService } from './filmsAPIServise';\n\nasync function getGenresInfo() {\n  const response = await apiService.fetchMovieGenres();\n\n  const genres = response.genres;\n  genres.map(item => {\n    const values = Object.values(item);\n    localStorage.setItem(values[0], values[1]);\n  });\n}\n\ngetGenresInfo();\n","import { apiService } from './filmsAPIServise';\nimport { refs } from './mainRendering' ;\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\n\nconst buttonBack = document.querySelector('.button-back');\nconst buttonForward = document.querySelector('.button-forward');\nconst buttonsPagesList = document.querySelector('.buttons-pages');\n\nlet screenWidth = null;\nlet lastPage = null;\n\n// Рендеринг пагінації\nexport default function buildingPagination({ page, total_pages: totalPages }) {\n    screenWidth = window.screen.width;\n    lastPage = totalPages;\n    \n// Пагінація для Mobile\n  if (screenWidth < 768) {\n    if (page < 4) {\n      buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-1\">1</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-2\">2</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-3\">3</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-4\">4</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button id=\"page-5\">5</button></li>\n`;\n        const currentPage = document.querySelector(`#page-${page}`);\n        currentPage.classList.add('current-page')\n        return;\n    }\n\n    if (page + 2 >= totalPages) {\n      buttonsPagesList.innerHTML = `\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 4}\">${totalPages - 4}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 3}\">${totalPages - 3}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 2}\">${totalPages - 2}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 1}\">${totalPages - 1}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages}\">${totalPages}</button></li>\n    `;\n        const currentPage = document.querySelector(`#page-${page}`);\n        currentPage.classList.add('current-page')\n        return;\n    }\n    if (page >= 4) {\n      buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\">${page - 2}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${page - 1}</button></li>\n    <li><button class=\"button-pagination button-page current-page\" type=\"button\">${page}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${page + 1}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${page + 2}</button></li>\n    `;\n      return;\n    }\n  }\n\n    // Пагінація для Tablet, Desktop\n  if (page < 5) {\n    buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-1\">1</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-2\">2</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-3\">3</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-4\">4</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-5\">5</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-6\">6</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-7\">7</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${totalPages}</button></li>\n`;\n    const currentPage = document.querySelector(`#page-${page}`);\n    currentPage.classList.add('current-page')\n    return;\n  }\n\n  if (page + 5 >= totalPages) {\n    buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\">1</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-6}\">${totalPages - 6}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-5}\">${totalPages - 5}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-4}\">${totalPages - 4}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-3}\">${totalPages - 3}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-2}\">${totalPages - 2}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-1}\">${totalPages - 1}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages}\">${totalPages}</button></li>\n    `;\n      \n    const currentPage = document.querySelector(`#page-${page}`);\n    currentPage.classList.add('current-page')\n    return;\n  }\n\n  if (page >= 5) {\n    buttonsPagesList.innerHTML = `\n        <li><button class=\"button-pagination button-page\" type=\"button\">1</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page - 2}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page - 1}</button></li>\n        <li><button class=\"button-pagination button-page current-page\" type=\"button\">${page}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page + 1}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page + 2}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${totalPages}</button></li>\n    `;\n      return;\n  }\n}\n\n// Слухач на клік по кнопці з номером сторінки\nbuttonsPagesList.addEventListener('click', renderingFilmsByPageNumber);\n// Слухач на клік по кнопці назад\nbuttonBack.addEventListener('click', goBackOnePage);\n// Слухач на клік по кнопці вперед\nbuttonForward.addEventListener('click', goForwardOnePage);\n\nfunction renderingFilmsByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n    return\n    }\n\n    if (apiService.requestType === 'trending') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        apiService.getPopularMovies().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n        }).catch(error => error.messsge);\n        return\n    }\n\n    if (apiService.requestType === 'search') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        apiService.fetchMovieByQuery().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n        }).catch(error => error.messsge);\n    }\n}\n\nfunction goBackOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n            }).catch(error => error.message);\n        }\n        return\n    }\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n            }).catch(error => error.message);\n        }\n    }\n}\n\nfunction goForwardOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n            }).catch(error => error.message);\n        }\n    }\n\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n            }).catch(error => error.message);\n        }\n    }\n}\n","// Сюди бажано не лізти\nimport { apiService } from './filmsAPIServise';\n// import refs from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport Loader from './loader';\nimport buildingPagination from './pagination';\n\n export const refs = {\n  homeHeaderForm: document.querySelector('.header__form'),\n  cardContainer: document.querySelector('.cards-container'),\n};\n\nconst loader = new Loader();\n\ndocument.addEventListener('DOMContentLoaded', receivingPopularFilms);\n\n export default async function receivingPopularFilms() {\n  loader.show();\n  const responce = await apiService.getPopularMovies();\n  loader.hide();\n\n  apiService.requestType = 'trending';\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n\ndocument.addEventListener('submit', gettingMoviesByKeyword);\n\nasync function gettingMoviesByKeyword(e) {\n  e.preventDefault();\n\n  apiService.query = refs.homeHeaderForm.query.value;\n  apiService.requestType = 'search';\n  console.log(apiService.requestType);\n\n  loader.show();\n  const responce = await apiService.fetchMovieByQuery();\n  loader.hide();\n\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n","export default class Loader {\n  constructor() {\n    this.loaderElement = document.createElement('div');\n    this.loaderElement.className = 'loader';\n  }\n\n  show() {\n    document.body.appendChild(this.loaderElement);\n  }\n\n  hide() {\n    this.loaderElement.remove();\n  }\n}\n","async function fetchMovieDetails(movieId) {\n    const apiKey = 'aa05d9ef1feff0e96ac321d8773a5c67';\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data;\n  }\n\n// import movieId from './Oleksandra';\n  // Определение функции для создания модального окна и заполнения его данными\n  \n  function createModal(movieData) {\n    modal = document.createElement('div');\n    modal.classList.add('modal');\n  \n    \n    const modalHTML = `\n      <div class=\"modal_content\">\n      <div class=\"close\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\"/>\n  <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\"/>\n  </svg>\n    </div>\n        <img src=\"https://image.tmdb.org/t/p/w500/${movieData.poster_path}\" class=\"modal_img\">\n        <div class=\"tablet_modal\">\n        <h2 class=\"main_text_modal\">${movieData.title}</h2>\n        <div class=\"modal_items_container\">\n          <ul class=\"modal_list\">\n            <li>Vote / Votes</li>\n            <li>Popularity</li>\n            <li>Original Title</li>\n            <li>Genre</li>\n          </ul>\n          <ul class=\"modal_list_value\">\n            <li>\n              <span class=\"vote_span\">${movieData.vote_average.toFixed(1)}</span>\n              <span class=\"delimiter\"> / </span>\n              <span class=\"vote_count_span\">${movieData.vote_count}</span>\n            </li>\n            <li>${movieData.popularity.toFixed(1)}</li>\n            <li>${movieData.title}</li>\n            <li>${movieData.genres[0].name}</li>\n          </ul>\n        </div>\n        <p class=\"about_modal_text\">About</p>\n        <p class=\"overview_modal\">${movieData.overview}</p>\n        <div class=\"buttons\">\n          <button class=\"button-watched\">Add to Watched</button>\n          <button class=\"button-queue\">Add to Queue</button>\n        </div>\n      </div>\n      </div>\n    `;\n  \n    modal.innerHTML += modalHTML;\n  \n    document.body.appendChild(modal);\n  \n    const closeBtn = modal.querySelector('.close');\n  \n    closeBtn.addEventListener('click', () => {\n      closeModal();\n      backdrop.remove();\n    });\n  \n    const closeOnEsc = (event) => {\n      if (event.key === 'Escape') {\n        closeModal();\n        backdrop.remove();\n      }\n    }\n  \n    document.addEventListener('keydown', closeOnEsc);\n  }\n  \n  //================= Определение функции для обработки нажатия на кнопку и получения данных от API================\n  async function handleModalBtnClick() {\n    const movieId = 255; // ID фильма, для которого нужно открыть модальное окно==========================\n    const movieData = await fetchMovieDetails(movieId);\n    createModal(movieData);\n    createBackdrop();\n  }\n  \n  \n  //===========БЕКДРОП=================\n  function createBackdrop() {\n    backdrop = document.createElement('div');\n    backdrop.classList.add('modal-backdrop');\n  \n    document.body.appendChild(backdrop);\n  \n    const closeBackdrop = () => {\n      backdrop.remove();\n      closeModal();\n    }\n  \n    backdrop.addEventListener('click', closeBackdrop);\n  \n    const closeOnEsc = (event) => {\n      if (event.key === 'Escape') {\n        closeBackdrop();\n        backdrop.remove();\n  \n      }\n    }\n  \n    document.addEventListener('keydown', closeOnEsc);\n  }\n  \n  //=================== Добавление обработчика события на кнопку \"Открыть модальное окно\"================\n  const modalBtn = document.querySelector('#modalBtn');\n  modalBtn.addEventListener('click', handleModalBtnClick);\n  \n  \n  //========\n  \n  function closeModal() {\n    modal.remove();\n    backdrop.remove();\n    document.removeEventListener('keydown', closeOnEsc);\n  }\n  "],"names":["$7003aba55d24a7e9$export$d0204b1ddc8ee140","async","response","fetch","this","requestType","searchQuery","page","json","data","error","console","log","url","ok","Error","id","lang","query","newQuery","pages","newPage","type","newType","constructor","$93c9a44056c4a9b9$export$2e2bcd8739ae039","films","map","title","poster_path","release_date","genre_ids","genresId","localStorage","getItem","length","splice","join","slice","fetchMovieGenres","genres","item","values","Object","setItem","$1846867684e857fa$var$getGenresInfo","$1bab9c519cfa82bc$var$buttonBack","document","querySelector","$1bab9c519cfa82bc$var$buttonForward","$1bab9c519cfa82bc$var$buttonsPagesList","$1bab9c519cfa82bc$var$screenWidth","$1bab9c519cfa82bc$var$lastPage","$1bab9c519cfa82bc$export$2e2bcd8739ae039","total_pages","totalPages","window","screen","width","innerHTML","classList","add","addEventListener","evt","target","fetchPage","textContent","Number","getPopularMovies","then","$af091a82a44a2137$export$21666b427502ea6d","cardContainer","results","catch","messsge","fetchMovieByQuery","message","homeHeaderForm","$af091a82a44a2137$var$loader","show","body","appendChild","loaderElement","hide","remove","createElement","className","responce","e","preventDefault","value","$e7775fe7970360c5$var$closeModal","modal","backdrop","removeEventListener","closeOnEsc","movieData","movieId","$e7775fe7970360c5$var$fetchMovieDetails","modalHTML","vote_average","toFixed","vote_count","popularity","name","overview","event","key","$e7775fe7970360c5$var$createModal","closeBackdrop","$e7775fe7970360c5$var$createBackdrop"],"version":3,"file":"index.4e7ec45b.js.map"}