{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,0BASA,SAASC,IACP,IAAMC,EAAMH,EAAAI,aAAaC,eAAe,WACxCC,EAAAC,KAAKC,cAAcC,UAAUC,IAAI,gBACjCJ,EAAAC,KAAKI,YAAYF,UAAUG,OAAO,gBAClCT,EAAIU,KAAI,SAAAC,GACN,IAAMC,EAAOD,EAAKE,OAAOH,KAAI,SAAAI,G,OAAQC,OAAOC,OAAOF,GAAM,E,IACzDH,EAAKM,UAAYL,C,IAEnBT,EAAAC,KAAKc,cAAcC,WAAY,EAAAC,EAAAC,SAAsBrB,EAAIsB,MAAM,EAAG,I,CAdpEC,SAASC,iBAAiB,mBAAoBzB,GAE9CI,EAAAC,KAAKC,cAAcmB,iBAAiB,QAASzB,GAE7CI,EAAAC,KAAKI,YAAYgB,iBAAiB,SAalC,WACE,IAAMxB,EAAMH,EAAAI,aAAaC,eAAe,SACxCC,EAAAC,KAAKI,YAAYF,UAAUC,IAAI,gBAC/BJ,EAAAC,KAAKC,cAAcC,UAAUG,OAAO,gBACpCT,EAAIU,KAAI,SAAAe,GACN,IAAMb,EAAOa,EAAKZ,OAAOH,KAAI,SAAAI,G,OAAQC,OAAOC,OAAOF,GAAM,E,IACzDW,EAAKR,UAAYL,C,IAEnBT,EAAAC,KAAKc,cAAcC,WAAY,EAAAC,EAAAC,SAAsBrB,EAAIsB,MAAM,EAAG,I,eC5BpExB,EAAA,S,oDAMmByB,SAASG,cAAc,gBACpBH,SAASG,cAAc,mBACpBH,SAASG,cAAc,mBAEhD,WACQ,IAAMC,EAAe9B,EAAAI,aAAaC,eAAe,WAC3C0B,EAAcD,EAAaE,OAC3BC,EAAQ,CACVC,KAAM,EACNC,YAAaC,KAAKC,KAAKN,EAAc,KAG7C,GAAoB,IAAhBA,EAGA,GAA0B,IAAtBE,EAAME,aACN,EAAAG,EAAAC,oBAAmBN,OAChB,CACyBH,EAAaL,MAAM,EAAG,KAC9C,EAAAa,EAAAC,oBAAmBN,E,EAInCO,E","sources":["src/js/libraryRendering.js","src/js/libraryPagination.js"],"sourcesContent":["import { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\ndocument.addEventListener('DOMContentLoaded', gettingMoviesFromWatched);\n\nrefs.buttonWatched.addEventListener('click', gettingMoviesFromWatched);\n\nrefs.buttonQueue.addEventListener('click', gettingMoviesFromQueue);\n\nfunction gettingMoviesFromWatched() {\n  const arr = libraryLogic.getFromStorage('watched');\n  refs.buttonWatched.classList.add('this-library');\n  refs.buttonQueue.classList.remove('this-library');\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n\nfunction gettingMoviesFromQueue() {\n  const arr = libraryLogic.getFromStorage('queue');\n  refs.buttonQueue.classList.add('this-library');\n  refs.buttonWatched.classList.remove('this-library');\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n","import renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader'\nimport { lastPage, buildingPagination } from './renderingPagination';\nimport { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\n\nconst buttonBack = document.querySelector('.button-back');\nconst buttonForward = document.querySelector('.button-forward');\nconst buttonsPagesList = document.querySelector('.buttons-pages');\n\nfunction renderingPaginationForFirstPage() {\n        const filmsWatched = libraryLogic.getFromStorage('watched');\n        const filmsAmount = filmsWatched.length;\n        const pages = {\n            page: 1,\n            total_pages: Math.ceil(filmsAmount / 20)\n        };\n        \n    if (filmsAmount === 0) {\n            return \n        }\n        if (pages.total_pages === 1) {\n            buildingPagination(pages);\n        } else {\n                const filmsForOnePage = filmsWatched.slice(0, 20);\n                buildingPagination(pages)\n        }\n}\n\nrenderingPaginationForFirstPage()\n\n// buttonsPagesList.addEventListener('click', (evt) => {\n//     if (evt.target.type !== 'button') {\n//     return\n//     }\n//   const queryPage = evt.target.textContent;\n//   const films = libraryLogic.getFromStorage('watched');\n//   console.log(films)\n//         const filmsAmount = films.length;\n//         const pages = {\n//             page: Number(queryPage),\n//             total_pages: Math.ceil(filmsAmount / 20)\n//         };\n//         if (pages.page === 1) {\n//             renderingPaginationForFirstPage();\n//             refs.cardContainer.innerHTML = renderMarkupFilmsCard(films);\n//             return\n//         }\n//         const filmsForPage = films.slice(pages.page*10, pages.page*20);\n//                 buildingPagination(pages);\n//                 refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForPage);\n// })\n\n"],"names":["$2JJTb","parcelRequire","$b54185920f8c634f$var$gettingMoviesFromWatched","arr","libraryLogic","getFromStorage","$4Nugj","refs","buttonWatched","classList","add","buttonQueue","remove","map","item1","keys","genres","item","Object","values","genre_ids","cardContainer","innerHTML","$1WxKN","default","slice","document","addEventListener","item2","querySelector","filmsWatched","filmsAmount","length","pages","page","total_pages","Math","ceil","$1DdQm","buildingPagination","$13fb3f589d51309b$var$renderingPaginationForFirstPage"],"version":3,"file":"library.11e160dc.js.map"}