{"mappings":"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","sources":["src/js/libraryRendering.js","src/js/libraryPagination.js"],"sourcesContent":["import { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { renderingPaginationForFirstPageQueue, renderingPaginationForFirstPageWatched } from './libraryPagination';\ndocument.addEventListener('DOMContentLoaded', gettingMoviesFromWatched);\n\nrefs.buttonWatched.addEventListener('click', gettingMoviesFromWatched);\n\nfunction gettingMoviesFromWatched() {\n  renderingPaginationForFirstPageWatched();\n  const arr = libraryLogic.getFromStorage('watched');\n  refs.buttonWatched.classList.add('this-library');\n  refs.buttonQueue.classList.remove('this-library');\n  if (arr.length == 0) {\n    refs.cardContainer.innerHTML =\n      \"<li class='clear-storage-text'><p>Sorry, but you haven't added any movies to this category yet</p></li>\";\n    return;\n  }\n\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n\nrefs.buttonQueue.addEventListener('click', gettingMoviesFromQueue);\n\nfunction gettingMoviesFromQueue() {\n  renderingPaginationForFirstPageQueue();\n  const arr = libraryLogic.getFromStorage('queue');\n  refs.buttonQueue.classList.add('this-library');\n  refs.buttonWatched.classList.remove('this-library');\n  if (arr.length == 0) {\n    refs.cardContainer.innerHTML =\n      \"<li class='clear-storage-text'><p>Sorry, but you haven't added any movies to this category yet</p></li>\";\n    return;\n  }\n\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n  \n}\n","import renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { lastPage, buildingPagination } from './renderingPagination';\nimport { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\n\nrefs.buttonsPagesList.addEventListener('click', renderingLibraryByPageNumber);\nrefs.buttonBack.addEventListener('click', goBackOnePageLibrary);\nrefs.buttonForward.addEventListener('click', goForwardOnePageLibrary);\n\nfunction renderingLibraryByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n        return\n    }\n\n    const selectLibrary = document.querySelector('.this-library');\n    libraryLogic.currentPage = Number(evt.target.textContent);\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n\n    if (libraryLogic.currentPage === 1) {\n        const filmsForOnePage = [...films].splice(0, 20);\n        buildingPagination(libraryLogic.pages);\n        filmsForOnePage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    } else {\n        const filmsForOnePage = [...films].splice((libraryLogic.currentPage * 10 + (libraryLogic.currentPage - 2) * 10), 20);\n        buildingPagination(libraryLogic.pages);\n        filmsForOnePage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    }\n}\n\nfunction goBackOnePageLibrary() {\n    if (libraryLogic.currentPage === 1) {\n        return\n    }\n\n    const selectLibrary = document.querySelector('.this-library');\n    libraryLogic.currentPage -= 1;\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n\n    const filmsForOnePage = films.slice(((libraryLogic.currentPage-1) * 20), (libraryLogic.currentPage * 20));\n    buildingPagination(libraryLogic.pages);\n    filmsForOnePage.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n        });\n    refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    \n}\n\nfunction goForwardOnePageLibrary() {\n    if (libraryLogic.currentPage === libraryLogic.totalPages) {\n        return\n    }\n\n    const selectLibrary = document.querySelector('.this-library');\n    libraryLogic.currentPage += 1;\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n\n   const filmsForOnePage = films.slice(((libraryLogic.currentPage-1) * 20), (libraryLogic.currentPage * 20));\n    buildingPagination(libraryLogic.pages);\n    filmsForOnePage.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n        });\n    refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n}\n\nexport function renderingPaginationForFirstPageWatched() {\n    const filmsWatched = libraryLogic.getFromStorage('watched');\n        const filmsAmount = filmsWatched.length;\n        libraryLogic.currentPage = 1;\n        libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n        \n    if (filmsAmount === 0) {\n        refs.buttonsPagesList.innerHTML = '';\n        refs.buttonBack.classList.add('button-hidden');\n        refs.buttonForward.classList.add('button-hidden')\n\n        return\n    } \n        refs.buttonBack.classList.remove('button-hidden');\n    refs.buttonForward.classList.remove('button-hidden');\n        buildingPagination(libraryLogic.pages)\n    }\n\nexport function renderingPaginationForFirstPageQueue() {\n    const filmsQueue = libraryLogic.getFromStorage('queue');\n    const filmsAmount = filmsQueue.length;\n    libraryLogic.currentPage = 1;\n        libraryLogic.totalPages = Math.ceil(filmsAmount / 20);\n        \n    if (filmsAmount === 0) {\n        refs.buttonsPagesList.innerHTML = '';\n        refs.buttonBack.classList.add('button-hidden');\n        refs.buttonForward.classList.add('button-hidden')\n            return \n    }\n    \n    refs.buttonBack.classList.remove('button-hidden');\n    refs.buttonForward.classList.remove('button-hidden');\n    buildingPagination(libraryLogic.pages);\n    }\n    \n"],"names":["$25dvs","parcelRequire","$cGFyt","$4079053403804050$export$b4f0f93c59f9ec5a","filmsAmount","libraryLogic","getFromStorage","length","currentPage","totalPages","Math","ceil","$krGWQ","refs","buttonsPagesList","innerHTML","buttonBack","classList","add","buttonForward","remove","$aJ15F","buildingPagination","pages","$4079053403804050$export$84c9108e470e5435","$5bbc6ace3e76458b$var$gettingMoviesFromWatched","arr","buttonWatched","buttonQueue","map","item1","keys","genres","item","Object","values","genre_ids","cardContainer","default","slice","addEventListener","evt","target","type","selectLibrary","document","querySelector","Number","textContent","films","trim","toLocaleLowerCase","filmsForOnePage","splice","window","scrollTo","top","left","behavior","item2","item3","item4"],"version":3,"file":"library.04173a5f.js.map"}