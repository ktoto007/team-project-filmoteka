{"mappings":"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","sources":["src/js/workWithLocalStorage.js","src/js/filmsAPIServise.js","src/js/renderMarkupFilmsCard.js","src/js/refs.js","src/js/modalWindowRendering.js"],"sourcesContent":["import { apiService } from './filmsAPIServise';\n\nasync function getGenresInfo() {\n  const response = await apiService.fetchMovieGenres();\n\n  const genres = response.genres;\n  genres.map(item => {\n    const values = Object.values(item);\n    localStorage.setItem(values[0], values[1]);\n  });\n}\n\ngetGenresInfo();\n\nclass LibraryLogic {\n  constructor() {}\n\n  addToLocalStorage(film, listType) {\n    let moviesList;\n\n    // Перевірка типу списку та отримання відповідного списку фільмів з localStorage\n    if (listType === 'watched') {\n      moviesList = JSON.parse(localStorage.getItem('watched')) || [];\n    } else if (listType === 'queue') {\n      moviesList = JSON.parse(localStorage.getItem('queue')) || [];\n    }\n\n    // Перевірка на наявність дублікатів в списку фільмів\n    if (!moviesList.find(movie => movie.id === film.id)) {\n      // Додавання фільму до списку\n      moviesList.push(film);\n\n      // Оновлення localStorage\n      localStorage.setItem(listType, JSON.stringify(moviesList));\n    }\n  }\n\n  removeFromLocalstorage(film, type) {\n    if (type == 'queue') {\n      const queueMovies = JSON.parse(localStorage.getItem('queue'));\n      if (queueMovies.find(queueMovie => queueMovie.id === film.id)) {\n        localStorage.setItem(\n          'queue',\n          JSON.stringify(\n            queueMovies.filter(queueMovie => queueMovie.id !== film.id)\n          )\n        );\n      }\n      return;\n    } else {\n      const watchedMovies = JSON.parse(localStorage.getItem('watched'));\n\n      if (watchedMovies.find(watchedMovie => watchedMovie.id === film.id)) {\n        localStorage.setItem(\n          'watched',\n          JSON.stringify(\n            watchedMovies.filter(watchedMovie => watchedMovie.id !== film.id)\n          )\n        );\n      }\n      return;\n    }\n  }\n\n  getFromStorage(key) {\n    try {\n      const movieStorage = localStorage.getItem(key);\n      if (movieStorage === null) {\n        return [];\n      } else {\n        return JSON.parse(movieStorage);\n      }\n    } catch (error) {\n      console.log(`Error`);\n      return [];\n    }\n  }\n}\n\nexport const libraryLogic = new LibraryLogic();\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aa05d9ef1feff0e96ac321d8773a5c67';\n\nclass Apiservice {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.requestType = 'trending';\n  }\n\n  async fetchMovieByQuery() {\n    const response = await fetch(\n      `${BASE_URL}${this.requestType}/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}`\n    );\n    const results = await response.json();\n    return results;\n  }\n\n  async getPopularMovies() {\n    try {\n      const response = await fetch(\n        `${BASE_URL}${this.requestType}/movie/day?api_key=${API_KEY}&page=${this.page}`\n      );\n      const data = await response.json();\n      const popularMovies = data;\n      return popularMovies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieGenres() {\n    try {\n      const url = `${BASE_URL}genre/movie/list?api_key=${API_KEY}`;\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesDetails(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieTrailer(id) {\n    const url = `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pages() {\n    return this.page;\n  }\n  set pages(newPage) {\n    this.page = newPage;\n  }\n  get type() {\n    return this.requestType;\n  }\n\n  set type(newType) {\n    this.requestType = newType;\n  }\n}\n\nexport const apiService = new Apiservice();","//Катя Допрацьовуєш тут\n\nexport default function renderMarkupFilmsCard(films) {\n  const markupFilmsCard = films\n    .map(({ title, poster_path, release_date, genre_ids, id }) => {\n      // Перевірка кількості жанрів\n\n      const genresId = genre_ids.map(id => localStorage.getItem(id));\n      \n      if (genresId.length > 2) {\n        genresId.splice(2, genresId.length - 2, 'Other');\n      }\n\n      const genres = genresId.join(', ');\n      \n      // Обрізання повної дати до року\n      const yearRelease = release_date.slice(0, 4);\n\n      return `\n          <li class=\"films-list__item\">\n                <a class=\"films-list__link\" id=${id}>\n                  <img class=\"films-list-item__poster\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" loading=\"lazy\"  />\n                  <div class=\"films-list-item__info\">\n                    <h2 class=\"films-list-item__tittle\">${title}</h2>\n                    <p class=\"films-list-item__ganres\">\n                      <span class=\"films-list-item__year\">${genres} | ${yearRelease}</span>\n                    </p>\n                  </div>\n                </a></li>`;\n    })\n    .join('');\n\n  return markupFilmsCard;\n}\n\n\n\n","const refs = {\n  homeHeaderForm: document.querySelector('.header__form'),\n  cardContainer: document.querySelector('.cards-container'),\n  conbuttonBack: document.querySelector('.button-back'),\n  buttonForward: document.querySelector('.button-forward'),\n  buttonsPagesList: document.querySelector('.buttons-pages'),\n  buttonQueue: document.querySelector('.header__btn-queue'),\n  buttonWatched: document.querySelector('.header__btn-watched'),\n};\n\nexport { refs };\n","import { apiService } from './filmsAPIServise';\nimport { libraryLogic } from './workWithLocalStorage';\n\n//=================== Добавление обработчика события на кнопку \"Открыть модальное окно\"================\nlet modal;\nlet backdrop;\nlet btnWatched;\nlet btnQueue;\nlet film;\nconst cardsContainer = document.querySelector('.cards-container');\ncardsContainer.addEventListener('click', handleModalBtnClick);\n\nfunction handleModalBtnClick(event) {\n  if (event.target.closest('.films-list__link')) {\n    const idFilm = event.target.closest('.films-list__link').getAttribute('id');\n\n    apiService.getMoviesDetails(idFilm).then(movieData => {\n        film = movieData\n      createModal(movieData);\n      createBackdrop();\n\n      btnWatched = document.querySelector('.button-watched');\n      btnQueue = document.querySelector('.button-queue');\n  \n      btnWatched.addEventListener('click', openWatchedList);\n      btnQueue.addEventListener('click', addFilmToQueue);\n    });\n  }\n}\n\nfunction createModal(movieData) {\n  modal = document.createElement('div');\n  modal.classList.add('modal');\n\n  const modalHTML = `\n      <div class=\"modal_content\">\n      <div class=\"close\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\"/>\n  <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\"/>\n  </svg>\n    </div>\n        <img src=\"https://image.tmdb.org/t/p/w500/${\n          movieData.poster_path\n        }\" class=\"modal_img\">\n        <div class=\"tablet_modal\">\n        <h2 class=\"main_text_modal\">${movieData.title}</h2>\n        <div class=\"modal_items_container\">\n          <ul class=\"modal_list\">\n            <li>Vote / Votes</li>\n            <li>Popularity</li>\n            <li>Original Title</li>\n            <li>Genre</li>\n          </ul>\n          <ul class=\"modal_list_value\">\n            <li>\n              <span class=\"vote_span\">${movieData.vote_average.toFixed(\n                1\n              )}</span>\n              <span class=\"delimiter\"> / </span>\n              <span class=\"vote_count_span\">${movieData.vote_count}</span>\n            </li>\n            <li>${movieData.popularity.toFixed(1)}</li>\n            <li>${movieData.title}</li>\n            <li>${movieData.genres[0].name}</li>\n          </ul>\n        </div>\n        <p class=\"about_modal_text\">About</p>\n        <p class=\"overview_modal\">${movieData.overview}</p>\n        <div class=\"buttons-modal\">\n          <button class=\"button-modal button-watched\" type=\"button\">Add to Watched</button>\n          <button class=\"button-modal button-queue\" type=\"button\">Add to Queue</button>\n        </div>\n      </div>\n      </div>\n    `;\n\n  modal.innerHTML = modalHTML;\n\n  document.body.appendChild(modal);\n\n  const closeBtn = modal.querySelector('.close');\n\n  closeBtn.addEventListener('click', () => {\n    closeModal();\n    backdrop.remove();\n  });\n\n  const closeOnEsc = event => {\n    if (event.key === 'Escape') {\n      closeModal();\n      backdrop.remove();\n    }\n  };\n\n  document.addEventListener('keydown', closeOnEsc);\n}\n\n//===========БЕКДРОП=================\nfunction createBackdrop() {\n  backdrop = document.createElement('div');\n  backdrop.classList.add('modal-backdrop');\n\n  document.body.appendChild(backdrop);\n\n  const closeBackdrop = () => {\n    // backdrop.remove();\n    closeModal();\n  };\n\n  backdrop.addEventListener('click', closeBackdrop);\n\n  const closeOnEsc = event => {\n    if (event.key === 'Escape') {\n      closeBackdrop();\n      document.removeEventListener('keydown', closeOnEsc);\n    }\n  };\n\n  document.addEventListener('keydown', closeOnEsc);\n}\n\nfunction closeModal() {\n  modal.remove();\n  backdrop.remove();\n}\n\nfunction openWatchedList(event) {\n    // console.log('виконую функцію watched');\n    btnQueue.setAttribute('disabled', '');\n\n    if (event.currentTarget.textContent === 'Add to Watched') {\n        event.currentTarget.textContent = 'Remove from Watched';\n        libraryLogic.addToLocalStorage(film, 'watched')\n        return\n    } else if(event.currentTarget.textContent === 'Remove from Watched') {\n        event.currentTarget.textContent = 'Add to Watched'\n        btnQueue.removeAttribute('disabled');\n        libraryLogic.removeFromLocalstorage(film, 'watched')\n    }\n\n  }\n\nfunction addFilmToQueue(event) {\n    // console.log('виконую функцію Queue')\n    btnWatched.setAttribute('disabled', '');\n    \n    if (event.currentTarget.textContent === 'Add to Queue') {\n        event.currentTarget.textContent = 'Remove from Queue';\n        libraryLogic.addToLocalStorage(film, 'queue')\n        return\n    } else if(event.currentTarget.textContent === 'Remove from Queue') {\n        event.currentTarget.textContent = 'Add to Queue'\n        btnWatched.removeAttribute('disabled', '');\n        libraryLogic.removeFromLocalstorage(film, 'Queue')\n    }\n    \n  }"],"names":["$9CftO","parcelRequire","async","apiService","fetchMovieGenres","genres","map","item","values","Object","localStorage","setItem","$1846867684e857fa$var$getGenresInfo","$1846867684e857fa$export$bb5dcce2800433c5","addToLocalStorage","film","listType","moviesList","JSON","parse","getItem","find","movie","id","push","stringify","removeFromLocalstorage","type","queueMovies","queueMovie","filter","watchedMovies","watchedMovie","getFromStorage","key","movieStorage","error","console","log","constructor","$7003aba55d24a7e9$export$d0204b1ddc8ee140","response","fetch","this","requestType","searchQuery","page","json","data","url","ok","Error","lang","query","newQuery","pages","newPage","newType","$93c9a44056c4a9b9$export$2e2bcd8739ae039","films","title","poster_path","release_date","genre_ids","id1","genresId","length","splice","join","slice","$ee27a4d7c64fc8c4$export$21666b427502ea6d","homeHeaderForm","document","querySelector","cardContainer","conbuttonBack","buttonForward","buttonsPagesList","buttonQueue","buttonWatched","$5f88b64defc87736$var$modal","$5f88b64defc87736$var$backdrop","$5f88b64defc87736$var$btnWatched","$5f88b64defc87736$var$btnQueue","$5f88b64defc87736$var$film","$5f88b64defc87736$var$closeModal","remove","$5f88b64defc87736$var$openWatchedList","event","setAttribute","currentTarget","textContent","$25dvs","libraryLogic","removeAttribute","$5f88b64defc87736$var$addFilmToQueue","addEventListener","target","closest","idFilm","getAttribute","getMoviesDetails","then","movieData","createElement","classList","add","modalHTML","vote_average","toFixed","vote_count","popularity","name","overview","innerHTML","body","appendChild","closeOnEsc","$5f88b64defc87736$var$createModal","closeBackdrop","removeEventListener","$5f88b64defc87736$var$createBackdrop"],"version":3,"file":"index.33bf62a9.js.map"}