{"mappings":"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","sources":["src/js/libraryRendering.js","src/js/libraryPagination.js"],"sourcesContent":["import { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\ndocument.addEventListener('DOMContentLoaded', gettingMoviesFromWatched);\n\nrefs.buttonWatched.addEventListener('click', gettingMoviesFromWatched);\n\nfunction gettingMoviesFromWatched() {\n  const arr = libraryLogic.getFromStorage('watched');\n  refs.buttonWatched.classList.add('this-library');\n  refs.buttonQueue.classList.remove('this-library');\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n\nrefs.buttonQueue.addEventListener('click', gettingMoviesFromQueue);\n\nfunction gettingMoviesFromQueue() {\n  const arr = libraryLogic.getFromStorage('queue');\n  refs.buttonQueue.classList.add('this-library');\n  refs.buttonWatched.classList.remove('this-library');\n  arr.map(item => {\n    const keys = item.genres.map(item => Object.values(item)[0]);\n    item.genre_ids = keys;\n  });\n  refs.cardContainer.innerHTML = renderMarkupFilmsCard(arr.slice(0, 20));\n}\n","import renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader'\nimport { lastPage, buildingPagination } from './renderingPagination';\nimport { libraryLogic } from './workWithLocalStorage';\nimport { refs } from './refs';\n\nfunction renderingPaginationForFirstPage() {\n        const filmsWatched = libraryLogic.getFromStorage('watched');\n        const filmsAmount = filmsWatched.length;\n        const pages = {\n            page: 1,\n            total_pages: Math.ceil(filmsAmount / 20)\n        };\n        if (filmsAmount === 0) {\n            return \n    }\n        if (pages.total_pages === 1) {\n            buildingPagination(pages);\n        } else {\n                \n                buildingPagination(pages)\n        }\n}\n\nrenderingPaginationForFirstPage()\n\nrefs.buttonsPagesList.addEventListener('click', renderingLibraryByPageNumber)\n\nfunction renderingLibraryByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n        return\n    }\n    const selectLibrary = document.querySelector('.this-library');\n    const queryPage = Number(evt.target.textContent);\n    console.log(selectLibrary.textContent.trim().toLocaleLowerCase())\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    const pages = {\n        page: queryPage,\n        total_pages: Math.ceil(filmsAmount / 20)\n    };\n    if (pages.page === 1) {\n        const filmsForOnePage = [...films].splice(0, 20);\n        buildingPagination(pages);\n        filmsForOnePage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForOnePage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    } else {\n        const filmsForPage = [...films].splice((pages.page * 10 + (pages.page - 2) * 10), 20);\n        buildingPagination(pages);\n        filmsForPage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForPage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n    }\n}\n\n// Слухач на кнопку назад\nrefs.buttonBack.addEventListener('click', goBackOnePageLibrary);\n// Слухач на клік по кнопці вперед\nrefs.buttonForward.addEventListener('click', goForwardOnePageLibrary);\n\nfunction goBackOnePageLibrary() {\n    const selectLibrary = document.querySelector('.this-library');\n    const queryPage = Number(document.querySelector('.current-page').textContent) - 1;\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    const pages = {\n        page: queryPage,\n        total_pages: Math.ceil(filmsAmount / 20)\n    };\n        if (queryPage !== 1) {\n            const filmsForPage = [...films].splice((pages.page * 10 + (pages.page - 2) * 10), 20);\n        buildingPagination(pages);\n        filmsForPage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForPage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        \n        return\n    }\n}\n\nfunction goForwardOnePageLibrary() {\n    const selectLibrary = document.querySelector('.this-library');\n    const queryPage = Number(document.querySelector('.current-page').textContent) + 1;\n    const films = libraryLogic.getFromStorage(`${selectLibrary.textContent.trim().toLocaleLowerCase()}`);\n    const filmsAmount = films.length;\n    const pages = {\n        page: queryPage,\n        total_pages: Math.ceil(filmsAmount / 20)\n    };\n    if (queryPage > pages.total_pages) {\n        return\n    } else {\n        const filmsForPage = [...films].splice((pages.page * 10 + (pages.page - 2) * 10), 20);\n        buildingPagination(pages);\n        filmsForPage.map(item => {\n            const keys = item.genres.map(item => Object.values(item)[0]);\n            item.genre_ids = keys;\n        });\n        refs.cardContainer.innerHTML = renderMarkupFilmsCard(filmsForPage);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        \n        return\n    }\n}\n"],"names":["$25dvs","parcelRequire","$5bbc6ace3e76458b$var$gettingMoviesFromWatched","arr","libraryLogic","getFromStorage","$krGWQ","refs","buttonWatched","classList","add","buttonQueue","remove","map","item1","keys","genres","item","Object","values","genre_ids","cardContainer","innerHTML","$cGFyt","default","slice","document","addEventListener","item2","filmsAmount","length","pages","page","total_pages","Math","ceil","$aJ15F","buildingPagination","$4079053403804050$var$renderingPaginationForFirstPage","buttonsPagesList","evt","target","type","selectLibrary","querySelector","queryPage","Number","textContent","console","log","trim","toLocaleLowerCase","films","filmsForOnePage","splice","window","scrollTo","top","left","behavior","filmsForPage","buttonBack","item3","buttonForward","item4"],"version":3,"file":"library.5305463e.js.map"}