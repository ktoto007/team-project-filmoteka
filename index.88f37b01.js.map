{"mappings":"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","sources":["src/js/filmsAPIServise.js","src/js/renderMarkupFilmsCard.js","src/js/workWithLocalStorage.js","src/js/loader.js","src/js/refs.js","src/js/renderingPagination.js","src/js/mainRendering.js","src/js/pagination.js","src/js/WorkingFiles/Aleks.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aa05d9ef1feff0e96ac321d8773a5c67';\n\nclass Apiservice {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.requestType = 'trending';\n  }\n\n  async fetchMovieByQuery() {\n    const response = await fetch(\n      `${BASE_URL}${this.requestType}/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}`\n    );\n    const results = await response.json();\n    return results;\n  }\n\n  async getPopularMovies() {\n    try {\n      const response = await fetch(\n        `${BASE_URL}${this.requestType}/movie/day?api_key=${API_KEY}&page=${this.page}`\n      );\n      const data = await response.json();\n      const popularMovies = data;\n      return popularMovies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieGenres() {\n    try {\n      const url = `${BASE_URL}genre/movie/list?api_key=${API_KEY}`;\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMoviesDetails(id) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=${this.lang}`\n      );\n      if (!response.ok) {\n        throw new Error('error');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getMovieTrailer(id) {\n    const url = `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pages() {\n    return this.page;\n  }\n  set pages(newPage) {\n    this.page = newPage;\n  }\n  get type() {\n    return this.requestType;\n  }\n\n  set type(newType) {\n    this.requestType = newType;\n  }\n}\n\nexport const apiService = new Apiservice();","//Катя Допрацьовуєш тут\n\nexport default function renderMarkupFilmsCard(films) {\n  const markupFilmsCard = films\n    .map(({ title, poster_path, release_date, genre_ids, id }) => {\n      // Перевірка кількості жанрів\n\n      const genresId = genre_ids.map(id => localStorage.getItem(id));\n      \n      if (genresId.length > 2) {\n        genresId.splice(2, genresId.length - 2, 'Other');\n      }\n\n      const genres = genresId.join(', ');\n      \n      // Обрізання повної дати до року\n      const yearRelease = release_date.slice(0, 4);\n\n      return `\n          <li class=\"films-list__item\">\n                <a id=${id}>\n                  <img class=\"films-list-item__poster\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" loading=\"lazy\"  />\n                  <div class=\"films-list-item__info\">\n                    <h2 class=\"films-list-item__tittle\">${title}</h2>\n                    <p class=\"films-list-item__ganres\">\n                      <span class=\"films-list-item__year\">${genres} | ${yearRelease}</span>\n                    </p>\n                  </div>\n                </a>`;\n    })\n    .join('');\n\n  return markupFilmsCard;\n}\n","import { apiService } from './filmsAPIServise';\n\nasync function getGenresInfo() {\n  const response = await apiService.fetchMovieGenres();\n\n  const genres = response.genres;\n  genres.map(item => {\n    const values = Object.values(item);\n    localStorage.setItem(values[0], values[1]);\n  });\n}\n\ngetGenresInfo();\n"," class Loader {\n  constructor() {\n    this.loaderElement = document.createElement('div');\n    this.loaderElement.className = 'loader';\n  }\n\n  show() {\n    document.body.appendChild(this.loaderElement);\n  }\n\n  hide() {\n    this.loaderElement.remove();\n  }\n}\n\nexport const loader = new Loader();","const refs = {\n  homeHeaderForm: document.querySelector('.header__form'),\n  cardContainer: document.querySelector('.cards-container'),\n  conbuttonBack: document.querySelector('.button-back'),\n  buttonForward: document.querySelector('.button-forward'),\n  buttonsPagesList: document.querySelector('.buttons-pages')\n};\n\nexport { refs };\n","import { refs } from './refs' ;\n\nexport default function buildingPagination({ page, total_pages: totalPages }) {\n    screenWidth = window.screen.width;\n    lastPage = totalPages;\n    \n// Пагінація для Mobile\n  if (screenWidth < 768) {\n    if (page < 4) {\n      refs.buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-1\">1</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-2\">2</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-3\">3</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-4\">4</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button id=\"page-5\">5</button></li>\n`;\n        const currentPage = document.querySelector(`#page-${page}`);\n        currentPage.classList.add('current-page')\n        return;\n    }\n\n    if (page + 2 >= totalPages) {\n      refs.buttonsPagesList.innerHTML = `\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 4}\">${totalPages - 4}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 3}\">${totalPages - 3}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 2}\">${totalPages - 2}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages - 1}\">${totalPages - 1}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages}\">${totalPages}</button></li>\n    `;\n        const currentPage = document.querySelector(`#page-${page}`);\n        currentPage.classList.add('current-page')\n        return;\n    }\n    if (page >= 4) {\n      refs.buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\">${page - 2}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${page - 1}</button></li>\n    <li><button class=\"button-pagination button-page current-page\" type=\"button\">${page}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${page + 1}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${page + 2}</button></li>\n    `;\n      return;\n    }\n  }\n\n    // Пагінація для Tablet, Desktop\n  if (page < 5) {\n    refs.buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-1\">1</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-2\">2</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-3\">3</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-4\">4</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-5\">5</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-6\">6</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-7\">7</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">${totalPages}</button></li>\n`;\n    const currentPage = document.querySelector(`#page-${page}`);\n    currentPage.classList.add('current-page')\n    return;\n  }\n\n  if (page + 5 >= totalPages) {\n    refs.buttonsPagesList.innerHTML = `<li><button class=\"button-pagination button-page\" type=\"button\">1</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-6}\">${totalPages - 6}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-5}\">${totalPages - 5}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-4}\">${totalPages - 4}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-3}\">${totalPages - 3}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-2}\">${totalPages - 2}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages-1}\">${totalPages - 1}</button></li>\n    <li><button class=\"button-pagination button-page\" type=\"button\" id=\"page-${totalPages}\">${totalPages}</button></li>\n    `;\n      \n    const currentPage = document.querySelector(`#page-${page}`);\n    currentPage.classList.add('current-page')\n    return;\n  }\n\n  if (page >= 5) {\n    refs.buttonsPagesList.innerHTML = `\n        <li><button class=\"button-pagination button-page\" type=\"button\">1</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page - 2}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page - 1}</button></li>\n        <li><button class=\"button-pagination button-page current-page\" type=\"button\">${page}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page + 1}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${page + 2}</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">...</button></li>\n        <li><button class=\"button-pagination button-page\" type=\"button\">${totalPages}</button></li>\n    `;\n      return;\n  }\n}","// Сюди бажано не лізти\nimport { apiService } from './filmsAPIServise';\n// import refs from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader';\nimport buildingPagination from './renderingPagination';\n\n export const refs = {\n  homeHeaderForm: document.querySelector('.header__form'),\n  cardContainer: document.querySelector('.cards-container'),\n};\n\ndocument.addEventListener('DOMContentLoaded', receivingPopularFilms);\n\n export default async function receivingPopularFilms() {\n  loader.show();\n  const responce = await apiService.getPopularMovies();\n  loader.hide();\n\n   apiService.requestType = 'trending';\n   try { localStorage.setItem('currentPage', JSON.stringify(responce))} catch (error){console.log(error.message)};\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n\nwindow.addEventListener('resize', evt => {\n  try {\n    const filmsForCurrentPage = JSON.parse(localStorage.getItem('currentPage'));\n    apiService.page = filmsForCurrentPage.page;\n    buildingPagination(filmsForCurrentPage)\n  } catch(error) {console.log(error.message)}\n})\ndocument.addEventListener('submit', gettingMoviesByKeyword);\n\nasync function gettingMoviesByKeyword(e) {\n  e.preventDefault();\n\n  apiService.query = refs.homeHeaderForm.query.value;\n  apiService.requestType = 'search';\n  console.log(apiService.requestType);\n\n  loader.show();\n  const responce = await apiService.fetchMovieByQuery();\n  loader.hide();\n\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n","import { apiService } from './filmsAPIServise';\nimport { refs } from './refs' ;\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader';\nimport buildingPagination from './renderingPagination';\n\nconst buttonBack = document.querySelector('.button-back');\nconst buttonForward = document.querySelector('.button-forward');\nconst buttonsPagesList = document.querySelector('.buttons-pages');\n\nlet screenWidth = null;\nlet lastPage = null;\n\n// Слухач на клік по кнопці з номером сторінки\nbuttonsPagesList.addEventListener('click', renderingFilmsByPageNumber);\n// Слухач на клік по кнопці назад\nbuttonBack.addEventListener('click', goBackOnePage);\n// Слухач на клік по кнопці вперед\nbuttonForward.addEventListener('click', goForwardOnePage);\n\nfunction renderingFilmsByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n    return\n    }\n\n    if (apiService.requestType === 'trending') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        loader.show();\n        apiService.getPopularMovies().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n            try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) {console.log(error.messsge)}\n        }).catch(error => error.messsge);\n        loader.hide();\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        return\n    }\n\n    if (apiService.requestType === 'search') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        loader.show();\n        apiService.fetchMovieByQuery().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n            try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) {console.log(error.messsge)}\n        }).catch(error => error.messsge);\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        loader.hide()\n    }\n}\n\nfunction goBackOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            loader.show();\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) {console.log(error.message)}\n            }).catch(error => error.message);\n            loader.hide();\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n        return\n    }\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            loader.show();\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) {console.log(error.message)}\n            }).catch(error => error.message);\n            loader.hide();\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n}\n\nfunction goForwardOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            loader.show();\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) {console.log(error.message)}\n            }).catch(error => error.message);\n            loader.hide();\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            loader.show();\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) {console.log(error.message)}\n            }).catch(error => error.message);\n            loader.hide();\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n}\n","async function fetchMovieDetails(movieId) {\n    const apiKey = 'aa05d9ef1feff0e96ac321d8773a5c67';\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data;\n  }\n\n// import movieId from './Oleksandra';\n  // Определение функции для создания модального окна и заполнения его данными\n  \n  function createModal(movieData) {\n    modal = document.createElement('div');\n    modal.classList.add('modal');\n  \n    \n    const modalHTML = `\n      <div class=\"modal_content\">\n      <div class=\"close\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\"/>\n  <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\"/>\n  </svg>\n    </div>\n        <img src=\"https://image.tmdb.org/t/p/w500/${movieData.poster_path}\" class=\"modal_img\">\n        <div class=\"tablet_modal\">\n        <h2 class=\"main_text_modal\">${movieData.title}</h2>\n        <div class=\"modal_items_container\">\n          <ul class=\"modal_list\">\n            <li>Vote / Votes</li>\n            <li>Popularity</li>\n            <li>Original Title</li>\n            <li>Genre</li>\n          </ul>\n          <ul class=\"modal_list_value\">\n            <li>\n              <span class=\"vote_span\">${movieData.vote_average.toFixed(1)}</span>\n              <span class=\"delimiter\"> / </span>\n              <span class=\"vote_count_span\">${movieData.vote_count}</span>\n            </li>\n            <li>${movieData.popularity.toFixed(1)}</li>\n            <li>${movieData.title}</li>\n            <li>${movieData.genres[0].name}</li>\n          </ul>\n        </div>\n        <p class=\"about_modal_text\">About</p>\n        <p class=\"overview_modal\">${movieData.overview}</p>\n        <div class=\"buttons\">\n          <button class=\"button-watched\">Add to Watched</button>\n          <button class=\"button-queue\">Add to Queue</button>\n        </div>\n      </div>\n      </div>\n    `;\n  \n    modal.innerHTML += modalHTML;\n  \n    document.body.appendChild(modal);\n  \n    const closeBtn = modal.querySelector('.close');\n  \n    closeBtn.addEventListener('click', () => {\n      closeModal();\n      backdrop.remove();\n    });\n  \n    const closeOnEsc = (event) => {\n      if (event.key === 'Escape') {\n        closeModal();\n        backdrop.remove();\n      }\n    }\n  \n    document.addEventListener('keydown', closeOnEsc);\n  }\n  \n  //================= Определение функции для обработки нажатия на кнопку и получения данных от API================\n  async function handleModalBtnClick() {\n    const movieId = 255; // ID фильма, для которого нужно открыть модальное окно==========================\n    const movieData = await fetchMovieDetails(movieId);\n    createModal(movieData);\n    createBackdrop();\n  }\n  \n  \n  //===========БЕКДРОП=================\n  function createBackdrop() {\n    backdrop = document.createElement('div');\n    backdrop.classList.add('modal-backdrop');\n  \n    document.body.appendChild(backdrop);\n  \n    const closeBackdrop = () => {\n      backdrop.remove();\n      closeModal();\n    }\n  \n    backdrop.addEventListener('click', closeBackdrop);\n  \n    const closeOnEsc = (event) => {\n      if (event.key === 'Escape') {\n        closeBackdrop();\n        backdrop.remove();\n  \n      }\n    }\n  \n    document.addEventListener('keydown', closeOnEsc);\n  }\n  \n  //=================== Добавление обработчика события на кнопку \"Открыть модальное окно\"================\n  const modalBtn = document.querySelector('#modalBtn');\n  modalBtn.addEventListener('click', handleModalBtnClick);\n  \n  \n  //========\n  \n  function closeModal() {\n    modal.remove();\n    backdrop.remove();\n    document.removeEventListener('keydown', closeOnEsc);\n  }\n  "],"names":["$7003aba55d24a7e9$export$d0204b1ddc8ee140","async","response","fetch","this","requestType","searchQuery","page","json","data","error","console","log","url","ok","Error","id","lang","query","newQuery","pages","newPage","type","newType","constructor","$93c9a44056c4a9b9$export$2e2bcd8739ae039","films","map","title","poster_path","release_date","genre_ids","id1","genresId","localStorage","getItem","length","splice","join","slice","fetchMovieGenres","genres","item","values","Object","setItem","$1846867684e857fa$var$getGenresInfo","$bdfcdc80b4c38739$export$f4c5de44377d2946","show","document","body","appendChild","loaderElement","hide","remove","createElement","className","$ee27a4d7c64fc8c4$export$21666b427502ea6d","homeHeaderForm","querySelector","cardContainer","conbuttonBack","buttonForward","buttonsPagesList","$7ceef3e5d95a1a9b$export$2e2bcd8739ae039","total_pages","totalPages","screenWidth","window","screen","width","lastPage","innerHTML","classList","add","$af091a82a44a2137$export$21666b427502ea6d","addEventListener","responce","getPopularMovies","JSON","stringify","message","results","evt","filmsForCurrentPage","parse","e","preventDefault","value","fetchMovieByQuery","$1bab9c519cfa82bc$var$buttonBack","$1bab9c519cfa82bc$var$buttonForward","$1bab9c519cfa82bc$var$buttonsPagesList","target","fetchPage","textContent","Number","then","messsge","catch","scrollTo","top","left","behavior","$e7775fe7970360c5$var$closeModal","modal","backdrop","removeEventListener","closeOnEsc","movieData","movieId","$e7775fe7970360c5$var$fetchMovieDetails","modalHTML","vote_average","toFixed","vote_count","popularity","name","overview","event","key","$e7775fe7970360c5$var$createModal","closeBackdrop","$e7775fe7970360c5$var$createBackdrop"],"version":3,"file":"index.88f37b01.js.map"}