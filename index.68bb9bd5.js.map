{"mappings":"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","sources":["src/index.js","src/js/mainRendering.js","src/js/loader.js","src/js/pagination.js"],"sourcesContent":["import './js/workWithLocalStorage';\nimport './js/mainRendering';\nimport './js/pagination';\nimport './js/modalWindowRendering';\nimport './js/footerModalRendering';","// Сюди бажано не лізти\nimport { apiService } from './filmsAPIServise';\nimport { refs } from './refs';\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader';\nimport { lastPage, buildingPagination } from './renderingPagination';\n\ndocument.addEventListener('DOMContentLoaded', receivingPopularFilms);\n\nexport default async function receivingPopularFilms() {\n  loader.show();\n  const responce = await apiService.getPopularMovies();\n  loader.hide();\n\n  apiService.requestType = 'trending';\n  try {\n    localStorage.setItem('currentPage', JSON.stringify(responce));\n  } catch (error) {\n    console.log(error.message);\n  }\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n\nwindow.addEventListener('resize', evt => {\n  try {\n    const filmsForCurrentPage = JSON.parse(localStorage.getItem('currentPage'));\n    apiService.page = filmsForCurrentPage.page;\n    buildingPagination(filmsForCurrentPage);\n  } catch (error) {\n    console.log(error.message);\n  }\n});\ndocument.addEventListener('submit', gettingMoviesByKeyword);\n\nasync function gettingMoviesByKeyword(e) {\n  e.preventDefault();\n\n  apiService.query = refs.homeHeaderForm.query.value;\n  apiService.requestType = 'search';\n  console.log(apiService.requestType);\n\n  loader.show();\n  const responce = await apiService.fetchMovieByQuery();\n  loader.hide();\n\n  buildingPagination(responce);\n  return (refs.cardContainer.innerHTML = renderMarkupFilmsCard(\n    responce.results\n  ));\n}\n"," class Loader {\n  constructor() {\n    this.loaderElement = document.createElement('div');\n    this.loaderElement.className = 'loader';\n  }\n\n  show() {\n    document.body.appendChild(this.loaderElement);\n  }\n\n  hide() {\n    this.loaderElement.remove();\n  }\n}\n\nexport const loader = new Loader();","import { apiService } from './filmsAPIServise';\nimport { refs } from './refs' ;\nimport renderMarkupFilmsCard from './renderMarkupFilmsCard';\nimport { loader } from './loader';\nimport {lastPage, buildingPagination } from './renderingPagination';\n\n// const buttonBack = document.querySelector('.button-back');\n// const buttonForward = document.querySelector('.button-forward');\n// const buttonsPagesList = document.querySelector('.buttons-pages');\n\n// Слухач на клік по кнопці з номером сторінки\nrefs.buttonsPagesList.addEventListener('click', renderingFilmsByPageNumber);\n// Слухач на клік по кнопці назад\nrefs.buttonBack.addEventListener('click', goBackOnePage);\n// Слухач на клік по кнопці вперед\nrefs.buttonForward.addEventListener('click', goForwardOnePage);\n\nfunction renderingFilmsByPageNumber(evt) {\n    if (evt.target.type !== 'button') {\n    return\n    }\n\n    if (apiService.requestType === 'trending') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        loader.show();\n        apiService.getPopularMovies().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n            try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n        }).catch(error => error.message).finally(() => loader.hide());\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        return\n    }\n\n    if (apiService.requestType === 'search') {\n        const fetchPage = evt.target.textContent;\n        apiService.page = Number(fetchPage);\n        loader.show();\n        apiService.fetchMovieByQuery().then(data => {\n            buildingPagination(data);\n            refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n            try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n        }).catch(error => error.message).finally(() => loader.hide());\n        \n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" }); \n    }\n}\n\nfunction goBackOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            loader.show();\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n        return\n    }\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== 1) {\n            apiService.page -= 1;\n            loader.show();\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n}\n\nfunction goForwardOnePage() {\n    if (apiService.requestType === 'trending') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            loader.show();\n            apiService.getPopularMovies().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results);\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n\n    if (apiService.requestType === 'search') {\n        if (apiService.page !== lastPage) {\n            apiService.page += 1;\n            loader.show();\n            apiService.fetchMovieByQuery().then(data => {\n                buildingPagination(data);\n                refs.cardContainer.innerHTML = renderMarkupFilmsCard(data.results)\n                try { localStorage.setItem('currentPage', JSON.stringify(data)) } catch (error) { console.log(error.message) }\n                 loader.hide();\n            }).catch(error => error.message).finally(() => loader.hide());\n            window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\n        }\n    }\n}\n"],"names":["parcelRequire","$9CftO","$bdfcdc80b4c38739$export$f4c5de44377d2946","show","document","body","appendChild","this","loaderElement","hide","remove","constructor","createElement","className","addEventListener","async","responce","apiService","getPopularMovies","requestType","localStorage","setItem","JSON","stringify","error","console","log","message","$aJ15F","buildingPagination","$krGWQ","refs","cardContainer","innerHTML","$cGFyt","default","results","window","evt","filmsForCurrentPage","parse","getItem","page","e","preventDefault","query","homeHeaderForm","value","fetchMovieByQuery","buttonsPagesList","target","type","fetchPage","textContent","Number","then","data","catch","finally","scrollTo","top","left","behavior","buttonBack","buttonForward","lastPage"],"version":3,"file":"index.68bb9bd5.js.map"}